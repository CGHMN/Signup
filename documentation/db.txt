For storing data, we rely on an external MySQL (or compatible) database.
There are 3 tables: Admins, Requests, and Users.
Because none of these are created automatically at the moment,
it's important that you create these manually.
To help with that, we'll document each table, it's purpose, and it's columns here.

*** Admins ***
This table stores all the server admins:
 * Their usernames
 * Their permissions
    * stored as an INVERTED bitmask,
      meaning a bit being set DENIES that permission.
 * Their passwords (as hashes)
 * Their IDs
Here are the columns:
 * ID:bigint (Primary Key) (Auto-increment)
 * Username:varchar(64) (Unique Index)
 * Password:text
 * Permissions:int

*** Requests ***
This table stores pending requests from users:
 * Their usernames
 * Their email addresses
 * Their WireGuard public keys
 * What they plan on doing on CGHMN
 * If they will need hosting from CGHMN
 * Whether they have sysadmin experience
 * Their preferred contact method
 * Their contact details
 * The status of their request (Pending, Approved, Rejected)
  * Stored as an integer (0 = Pending, 1 = Approved, 2 = Rejected)
 * The request IDs
Here are the columns:
 * ID:bigint (Primary Key) (Auto-increment)
 * Status:int (Index)
 * Username:varchar(64) (Index)
 * Email:text
 * Pubkey:text
 * Plan:text
 * Hosting:bool (Nullable)
 * Experience:bool (Nullable)
 * Contact:text
 * Contact_Details:text

*** Users ***
This table stores all the users whose requests have been approved
and who are now members of CGHMN:
 * Their usernames
 * Their email addresses
 * Their peers on the Wireguard server, stored as JSON objects containing the following:
    * Their peer ID
    * Their tunnel IP
    * Their routed subnet(s)
    * Their Wireguard pubkeys
 * Their user IDs
Here are the columns:
 * ID:bigint (Primary Key) (Auto-increment)
 * Username:varchar(64) (Unique Index)
 * Email:text (Unique)
 * Peers:text